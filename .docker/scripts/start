#!/bin/bash

set -e

startAll=$(date +%s)

. .env

getLogo() {
  cat <<"EOF"


                                          __         ___       __              __
   ____ ___   ____ _ ____ _ ___   ____   / /_ ____  |__ \ ____/ /____   _____ / /__ ___   _____
  / __ `__ \ / __ `// __ `// _ \ / __ \ / __// __ \ __/ // __  // __ \ / ___// //_// _ \ / ___/
 / / / / / // /_/ // /_/ //  __// / / // /_ / /_/ // __// /_/ // /_/ // /__ / ,<  /  __// /
/_/ /_/ /_/ \__,_/ \__, / \___//_/ /_/ \__/ \____//____/\__,_/ \____/ \___//_/|_| \___//_/
                  /____/

EOF
}

createMagentoProject() {
  composer create-project --ignore-platform-reqs \
    --repository-url=https://mirror.mage-os.org/ magento/project-community-edition:"$MAGENTO_VERSION" .
  composer req --ignore-platform-reqs \
    magepal/magento2-gmailsmtpapp yireo/magento2-webp2 dominicwatts/cachewarmer
}

composerInstallPackages() {
  composer install --ignore-platform-reqs
}

removeComposerCache() {
  folders=("/root/.composer" "/.composer" "/var/www/.composer" "/var/www/html/.composer")
  for path in "${folders[@]}"; do
    if [ -d "$path" ]; then
      rm -rf "$path"
    fi
  done
}

magentoInstall() {
  bin/magento setup:install --base-url-secure=https://"$1"/ \
    --db-host=/run/mysqld/mysqld.sock --db-name="$MYSQL_DATABASE" --db-user="root" --db-password="$MYSQL_ROOT_PASSWORD" \
    --backend-frontname=admin --admin-lastname="$ADMIN_NAME" --admin-firstname="$ADMIN_SURNAME" \
    --admin-email="$ADMIN_EMAIL" --admin-user="$ADMIN_USER" --admin-password="$ADMIN_PASS" \
    --page-cache=redis --page-cache-redis-server="$REDIS_SOCK" --page-cache-redis-db=0 \
    --cache-backend=redis --cache-backend-redis-server="$REDIS_SOCK" --cache-backend-redis-db=1 \
    --session-save=redis --session-save-redis-host="$REDIS_SOCK" --session-save-redis-persistent-id=sess-db2 --session-save-redis-db=2 \
    --search-engine=elasticsearch7 --elasticsearch-host=127.0.0.1 --elasticsearch-port=9200 \
    --cleanup-database
}

setPerformanceVars() {
  bin/magento config:set catalog/search/enable_eav_indexer 1 &&
    bin/magento config:set dev/template/minify_html 1 &&
    bin/magento config:set dev/js/merge_files 1 &&
    bin/magento config:set dev/js/enable_js_bundling 1 &&
    bin/magento config:set dev/js/minify_files 1 &&
    bin/magento config:set dev/js/move_script_to_bottom 1 &&
    bin/magento config:set dev/css/merge_css_files 1 &&
    bin/magento config:set dev/css/minify_files 1 &&
    bin/magento config:set web/seo/use_rewrites 1 &&
    bin/magento config:set web/url/redirect_to_base 0 &&
    bin/magento config:set web/secure/use_in_frontend 1 &&
    bin/magento config:set web/secure/use_in_adminhtml 1
}

showSuccess() {

  echo "
Backend:\

https://$1/admin\

User: mage2_admin\

Password: mage2_admin123#T\


Frontend:\

https://$1

"
}

setBaseUrl() {
  bin/magento config:set web/unsecure/base_url "http://$1/"
}

dbTablesCount() {
  TABLE="core_config_data"
  SQL="select count(*) as tablecount from information_schema.tables where table_schema='${MYSQL_DATABASE}' and table_name='${TABLE}'"
  dbtest=$(mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -s -N -e "$SQL")

  echo "$dbtest"
}

removeMagentoFilesToReinstall() {
  local FILES=(var/composer_home var/log var/page_cache var/session var/view_preprocessed app/etc/config.php app/etc/env.php)
  for i in "${FILES[@]}"; do
    if [[ -f $i ]]; then
      rm "$i"
    fi
  done
}

setContainerPermissions() {
  sudo chown -R www-data:www-data /var/www
  chmod -R 777 /var/www/html
}


getLogo

sleep 10
FILE_ENV="app/etc/env.php"

if [ -z "$HOST_NAME" ]; then
  HOST_NAME="$(hostname -i)"
fi
if [[ $(dbTablesCount) == 0 ]]; then
  removeMagentoFilesToReinstall
fi
if [ -f "composer.json" ]; then
  composerInstallPackages
else
  createMagentoProject
fi
if [[ ! -f "$FILE_ENV" ]]; then
  setContainerPermissions
  magentoInstall "$HOST_NAME"
  bin/magento module:disable -c Magento_TwoFactorAuth
  bin/magento sampledata:deploy
  setPerformanceVars
  bin/magento se:up
  bin/magento ind:rei
  bin/magento cache:flush
  removeComposerCache
fi

setBaseUrl "$HOST_NAME"
showSuccess "$HOST_NAME"
endAll=$(date +%s)
echo "Setup Time: $((endAll - startAll)) Sec"

version: '3.8'

services:

  nginx:
    container_name: ${NAMESPACE}_nginx
    image: nginx:${NGINX_VERSION}
    networks:
      default:
        aliases:
          - localhost
    depends_on:
      - main
    ports:
      - "80:80"
      - "443:443"
    environment:
      TZ: ${TZ}
    command: '/usr/sbin/nginx -g "daemon off; error_log /dev/stderr info;"'
    volumes:
      - phpsocket:/var/run
      - .docker/config/nginx/ssl:/etc/nginx/ssl:ro
      - .docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - .docker/config/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - app_data:${WORKDIR_SERVER}:delegated

  main:
    container_name: ${NAMESPACE}_main
    image: osioaliu/magento2docker:dev
    environment:
      TZ: ${TZ}
      HOST_NAME: localhost
    sysctls:
      net.core.somaxconn: 65536
    user: 1000:1000
    volumes:
      - phpsocket:/var/run
      - ~/.composer:/home/www-data/.composer:delegated
      - app_data:${WORKDIR_SERVER}:delegated

#  rabbitmq:
#    container_name: ${NAMESPACE}_rabbitmq
#    image: rabbitmq:${RABBITMQ_VERSION}
#    environment:
#      RABBITMQ_DEFAULT_USER: admin
#      RABBITMQ_DEFAULT_PASS: admin20173
#    ports:
#      - "15672:15672"
#      - "5672:5672"7

#  mailhog:
#    container_name: ${NAMESPACE}_mailhog
#    image: mailhog/mailhog:${MAILHOG_VERSION}
#    ports:
#      - "8025:8025"

#  watchtower:
#    container_name: ${NAMESPACE}_watchtower
#    image: containrrr/watchtower:${WATCHTOWER_VERSION}
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    command: --interval 3600

volumes:
  phpsocket:
  app_data:
    external: true